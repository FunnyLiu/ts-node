module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    tsconfigRootDir: __dirname,
    project: ['./tsconfig.json'],
  },
  plugins: [
    '@typescript-eslint',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    // npm i eslint-config-standard-with-typescript
    // 'standard-with-typescript'
  ],
  rules: {
    '@typescript-eslint/ban-types': ['error', {
        extendDefaults: true,
        types: {object: false}
    }],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-namespace': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/unbound-method': 'off',
    'no-constant-condition': 'off',
    'no-multi-spaces': 'error',
    '@typescript-eslint/space-before-function-paren': ['error'],
    '@typescript-eslint/space-infix-ops': ['error'],
    '@typescript-eslint/semi': ['error', 'never'],

'array-bracket-newline': 'error',
'array-bracket-spacing': 'error',
'array-element-newline': ['error', 'consistent'],
'block-spacing': 'error',
'brace-style': 'error',
'camelcase': 'error',
'comma-dangle': 'error',
'comma-spacing': 'error',
'comma-style': 'error',
'computed-property-spacing': 'error',
'consistent-this': 'error',
'eol-last': 'error',
'func-call-spacing': 'error',
'func-name-matching': 'error',
'function-call-argument-newline': ['error', 'consistent'],
'id-denylist': 'error',
'id-match': 'error',
'implicit-arrow-linebreak': 'error',
'jsx-quotes': 'error',
'key-spacing': 'error',
'keyword-spacing': 'error',
'linebreak-style': 'error',
'max-depth': 'error',
// 'max-len': ['error', 120],
'max-nested-callbacks': 'error',
'max-statements-per-line': 'error',
'new-cap': 'error',
'new-parens': 'error',
'newline-per-chained-call': 'error',
'no-array-constructor': 'error',
'no-bitwise': 'error',
'no-mixed-operators': 'error',
'no-mixed-spaces-and-tabs': 'error',
'no-multi-assign': 'error',
'no-multiple-empty-lines': 'error',
'no-nested-ternary': 'error',
'no-new-object': 'error',
'no-restricted-syntax': 'error',
'no-tabs': 'error',
'no-trailing-spaces': 'error',
'no-unneeded-ternary': 'error',
'no-whitespace-before-property': 'error',
'nonblock-statement-body-position': 'error',
'object-curly-newline': 'error',
'object-curly-spacing': ['error', 'always'],
'one-var-declaration-per-line': 'error',
'operator-assignment': 'error',
'padding-line-between-statements': 'error',
'prefer-exponentiation-operator': 'error',
'prefer-object-spread': 'error',
'semi-spacing': 'error',
'semi-style': ['error', 'first'],
'sort-vars': 'error',
'space-before-blocks': 'error',
'space-before-function-paren': 'error',
'space-in-parens': 'error',
'space-infix-ops': 'error',
'space-unary-ops': 'error',
'spaced-comment': 'error',
'switch-colon-spacing': 'error',
'template-tag-spacing': 'error',
'unicode-bom': 'error',


    '@typescript-eslint/comma-spacing': 'error',
    '@typescript-eslint/dot-notation': 'error',
    '@typescript-eslint/brace-style': 'error',
    '@typescript-eslint/func-call-spacing': 'error',
    '@typescript-eslint/indent': ['error', 2],
    '@typescript-eslint/keyword-spacing': 'error',
    '@typescript-eslint/no-array-constructor': 'error',
    '@typescript-eslint/no-dupe-class-members': 'error',
    '@typescript-eslint/no-redeclare': 'error',
    '@typescript-eslint/no-useless-constructor': 'error',
    '@typescript-eslint/quotes': ['error', 'single', {avoidEscape: true, allowTemplateLiterals: true}],

    '@typescript-eslint/consistent-type-assertions': 'error',
  }
};
